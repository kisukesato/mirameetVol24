{"./":{"url":"./","title":"はじめに","keywords":"","body":"GCP初心者必見！ PythonでBigQueryの操作をしてみよう！ 第24回目の開催となるmirameetの題材はGCP初心者必見★ 今回のハンズオンはGoogle Cloud Storageの開発Tipsも取り込んだ内容になっています！ 事前準備 Dockerインストール GitHubアカウント GCPアカウント 今回の流れ CSVファイルをGCS（GoogleCloudStroage）上にアップロード、 CSVファイルのデータをBigQueryに投入、 BigQuery内のデータを確認するバッチを作成し実行します。 技術要素 GCP Docker python 手順 全体手順としては次の流れで進めます。 ①事前準備内容の確認 ②GCP各種サービスの設定 ③各処理の実行と処理結果の確認 Windows/Macの方向けに作成しております。コマンドラインツールは、個々の利用しているもので良いのですが、今回の手順は次のものを利用します。 Windows：コマンドプロンプト Mac：ターミナル "},"Section1.html":{"url":"Section1.html","title":"1. 事前準備内容の確認","keywords":"","body":"事前準備 GCPアカウントの確認 Dockerの動作確認 docker-compose version ソースファイルの取得 download zipをしてローカルの任意のディレクトリで解凍してください。 "},"Section2.html":{"url":"Section2.html","title":"2. GCP各種サービスの設定","keywords":"","body":"GCP各種サービスの設定 この手順では次の手順を進めていきます。 GCSバケット作成 グローバルに一意になるように各自設定を行います。 ↓作成完了 GCS内権限設定 GCSの権限を「ストレージ管理者」に設定します。 サービスアカウントの作成 ↓作成完了 秘密鍵ファイルの取得・配置 ※json形式のキーをダウンロード ダウンロードした秘密鍵ファイルを、配置する。・配置先 mirameet_vol24\\credential ・ファイル名 key.json BigQueryAPIの有効化 ↓完了 データセットの作成 ↓完了 テーブルの作成 \\mirameet_vol24\\sql\\mira_vol24.sqlをご自身の作成したデータセットIDに置換してクエリ実行（例） CREATE TABLE mira_vol24.mira_example　～～～ ↓ CREATE TABLE sechico_0905.mira_example　～～～ ↓実行完了 OperationObject.pyの編集 url_gs_example_csv 「gsutil URI」をコピーして置換（例） url_gs_example_csv=\"gs://mira-example/gcs-example.csv\" ↓ url_gs_example_csv=\"gs://sechico-mirameet_vol24/gcs-example.csv\" bucket_name 「名前」をコピーして置換（例） bucket_name = \"mira-example\" ↓ bucket_name = \"sechico-mirameet_vol24\" project_id 「プロジェクトID」をコピーして置換 （例） project_id = \"erudite-pride-323410\" ↓ project_id = \"sylvan-surf-322711\" dataset_id 「データセットID」をコピーして置換（例） dataset_id = \"mira_vol24\" ↓ dataset_id = \"sechico_0905\" table_id　←テーブル作成時のクエリから変えている場合 「テーブルID」をコピーして置換（例） table_id = \"mira-example\" ↓ table_id = \"mira-example\"　←テーブル作成時のクエリ "},"Section3.html":{"url":"Section3.html","title":"3. 各処理の実行と処理結果の確認","keywords":"","body":"各処理の実行と処理結果の確認 カレントディレクトリの移動 cd ～～～\\mirameet_vol24 GcsUploader01.pyの実行 python GcsUploader01.py CSVファイルがGCSにアップロードされていることを確認。 GcsToBigQuery02.pyの実行 python GcsToBigQuery02.py CSVの中のデータがBigQueryにインサートされていることを確認。 UpdateDeleteBigQuery03.pyの実行 python UpdateDeleteBigQuery03.py データが更新・削除されていることを確認。 ExportBigQuery04.pyの実行 python ExportBigQuery04.py BigQueryのデータが「out-gcs-example.csv」ファイルとしてGCSに出力されていることを確認。 "}}